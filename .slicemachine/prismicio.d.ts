// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for continent documents */
interface ContinentDocumentData {
    /**
     * title field in *continent*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: continent.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * subtitle field in *continent*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: continent.subtitle
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    subtitle: prismicT.KeyTextField;
    /**
     * banner field in *continent*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: continent.banner
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    banner: prismicT.ImageField<never>;
    /**
     * description field in *continent*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: continent.description
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Slice Zone field in *continent*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: continent.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<ContinentDocumentDataSlicesSlice>;
}
/**
 * Slice for *continent → Slice Zone*
 *
 */
type ContinentDocumentDataSlicesSlice = CountrySlice;
/**
 * continent document from Prismic
 *
 * - **API ID**: `continent`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ContinentDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<ContinentDocumentData>, "continent", Lang>;
export type AllDocumentTypes = ContinentDocument;
/**
 * Item in Country → Items
 *
 */
export interface CountrySliceDefaultItem {
    /**
     * country field in *Country → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: country.items[].country
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    country: prismicT.KeyTextField;
    /**
     * city field in *Country → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: country.items[].city
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    city: prismicT.KeyTextField;
    /**
     * banner field in *Country → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: country.items[].banner
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    banner: prismicT.ImageField<never>;
}
/**
 * Default variation for Country Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Country`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CountrySliceDefault = prismicT.SharedSliceVariation<"default", Record<string, never>, Simplify<CountrySliceDefaultItem>>;
/**
 * Slice variation for *Country*
 *
 */
type CountrySliceVariation = CountrySliceDefault;
/**
 * Country Shared Slice
 *
 * - **API ID**: `country`
 * - **Description**: `Country`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type CountrySlice = prismicT.SharedSlice<"country", CountrySliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { ContinentDocumentData, ContinentDocumentDataSlicesSlice, ContinentDocument, AllDocumentTypes, CountrySliceDefaultItem, CountrySliceDefault, CountrySliceVariation, CountrySlice };
    }
}
